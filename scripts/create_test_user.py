#!/usr/bin/env python3\n\"\"\"\nCreate Test User for Stripe Testing\nCreates a verified test user to test payment functionality\n\"\"\"\n\nimport sys\nimport os\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom app import create_app, db\nfrom app.models import User, UserProgress\nfrom app.payment_models import SubscriptionPlan\nfrom werkzeug.security import generate_password_hash\nfrom datetime import datetime\n\ndef create_test_user():\n    \"\"\"Create a test user for payment testing\"\"\"\n    print(\"👤 Creating test user for payment testing...\")\n    \n    app = create_app()\n    \n    with app.app_context():\n        # Check if test user already exists\n        test_user = User.query.filter_by(email='test@sertifikatet.no').first()\n        \n        if test_user:\n            print(\"ℹ️  Test user already exists!\")\n            print(f\"   Email: {test_user.email}\")\n            print(f\"   Username: {test_user.username}\")\n            print(\"   Password: test123\")\n            print(f\"   Verified: {test_user.is_verified}\")\n            \n            # Make sure user is verified\n            if not test_user.is_verified:\n                test_user.is_verified = True\n                db.session.commit()\n                print(\"✅ User is now verified\")\n            \n            return test_user\n        \n        # Create new test user\n        user = User(\n            username='testuser',\n            email='test@sertifikatet.no',\n            password_hash=generate_password_hash('test123'),\n            full_name='Test User',\n            is_verified=True,  # Skip email verification for testing\n            created_at=datetime.utcnow()\n        )\n        \n        db.session.add(user)\n        db.session.flush()  # Get user ID\n        \n        # Create user progress record\n        progress = UserProgress(user_id=user.id)\n        db.session.add(progress)\n        \n        db.session.commit()\n        \n        print(\"✅ Test user created successfully!\")\n        print(f\"   Email: {user.email}\")\n        print(f\"   Username: {user.username}\")\n        print(\"   Password: test123\")\n        print(\"   Status: Verified and ready to use\")\n        \n        return user\n\ndef verify_plans():\n    \"\"\"Verify subscription plans exist\"\"\"\n    app = create_app()\n    \n    with app.app_context():\n        plans = SubscriptionPlan.query.filter_by(is_active=True).all()\n        \n        print(\"\\n📋 Available subscription plans:\")\n        for plan in plans:\n            print(f\"   • {plan.display_name}: {plan.price_nok} NOK/month\")\n        \n        if not plans:\n            print(\"❌ No subscription plans found! Run 'python scripts/init_stripe.py' first\")\n            return False\n        \n        return True\n\ndef main():\n    print(\"🚀 Setting up test user for Stripe payment testing...\")\n    print(\"=\" * 60)\n    \n    # Create test user\n    user = create_test_user()\n    \n    # Verify plans exist\n    if verify_plans():\n        print(\"\\n\" + \"=\" * 60)\n        print(\"🎉 Test setup complete!\")\n        print(\"\\nTo test payments:\")\n        print(\"1. Start your app: python run.py\")\n        print(\"2. Go to: http://localhost:8000/auth/login\")\n        print(\"3. Login with:\")\n        print(\"   • Email: test@sertifikatet.no\")\n        print(\"   • Password: test123\")\n        print(\"4. Navigate to: http://localhost:8000/subscription/plans\")\n        print(\"5. Try upgrading to Premium or Pro\")\n        print(\"\\nTest cards for Norway:\")\n        print(\"• Visa: 4000 0056 4000 0008\")\n        print(\"• Mastercard: 5555 5556 4000 0008\")\n        print(\"• Any future expiry date and 3-digit CVC\")\n        print(\"\\n⚠️  Remember: You're using LIVE Stripe keys!\")\n        print(\"   Real payments will be processed. Consider switching to test keys.\")\n    else:\n        print(\"\\n❌ Setup incomplete. Please run initialization script first.\")\n\nif __name__ == '__main__':\n    main()\n