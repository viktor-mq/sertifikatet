<!-- Daily Challenge Management Section - Integrated into Admin Dashboard -->
<div id="dailyChallengeSection" class="section">
    <!-- Statistics Cards -->
    <div class="stats-container">
        <div class="stat-card">
            <h3 data-stat="total_challenges">0</h3>
            <p>Total Challenges</p>
        </div>
        <div class="stat-card">
            <h3 data-stat="active_challenges">0</h3>
            <p>Active Today</p>
        </div>
        <div class="stat-card">
            <h3 data-stat="challenges_this_week">0</h3>
            <p>This Week</p>
        </div>
        <div class="stat-card">
            <h3 data-stat="avg_completion_rate">0%</h3>
            <p>Avg Completion Rate</p>
        </div>
    </div>

    <!-- Main Content Container -->
    <div style="max-width: 1200px; margin: 0 auto; padding: 20px; background: white; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
        <!-- Header -->
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px;">
            <h2 style="margin: 0; color: #333; font-size: 1.8rem;">üéØ Daily Challenge Management</h2>
            <div>
                <button onclick="openDailyChallengeModal()" class="btn" style="
                    background: #007bff; 
                    color: white; 
                    padding: 8px 16px; 
                    border: none; 
                    border-radius: 4px; 
                    text-decoration: none;
                    cursor: pointer;
                ">
                    <i class="fas fa-plus"></i> Create Challenge
                </button>
            </div>
        </div>

        <!-- Loading Indicator -->
        <div id="challenge-loading" style="display: none; text-align: center; padding: 20px;">
            <i class="fas fa-spinner fa-spin fa-2x text-muted"></i>
            <p class="text-muted mt-2">Loading challenge data...</p>
        </div>

        <!-- Filters and Controls -->
        <div style="border: 1px solid #e0e0e0; border-radius: 8px; margin-bottom: 20px; background: white; box-shadow: 0 2px 4px rgba(0,0,0,0.05);">
            <div style="background: #f8f9fa; padding: 15px; border-bottom: 1px solid #e0e0e0; border-radius: 8px 8px 0 0;">
                <h6 style="margin: 0; font-weight: bold; color: #007bff;">Filters & Controls</h6>
            </div>
            <div style="padding: 20px;">
                <!-- Filters Row -->
                <div style="display: grid; grid-template-columns: 1fr 1fr 1fr 1fr auto; gap: 15px; align-items: end; margin-bottom: 20px;">
                    <div>
                        <label style="font-weight: bold; margin-bottom: 5px; display: block;">Challenge Type</label>
                        <select id="challenge-type-filter" style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
                            <option value="">All Types</option>
                            <option value="quiz">Quiz</option>
                            <option value="streak">Streak</option>
                            <option value="perfect_score">Perfect Score</option>
                            <option value="category_focus">Category Focus</option>
                        </select>
                    </div>
                    <div>
                        <label style="font-weight: bold; margin-bottom: 5px; display: block;">Date Filter</label>
                        <select id="challenge-date-filter" style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
                            <option value="">All Dates</option>
                            <option value="today">Today</option>
                            <option value="active">Active Only</option>
                            <option value="past_week">Past Week</option>
                        </select>
                    </div>
                    <div>
                        <label for="challenge-search" style="font-weight: bold; margin-bottom: 5px; display: block;">Search</label>
                        <input type="text" id="challenge-search" placeholder="Search challenges..." 
                               style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
                    </div>
                    <div>
                        <button type="button" onclick="applyDailyChallengeFilters()" style="
                            background: #007bff; 
                            color: white; 
                            padding: 8px 16px; 
                            border: none; 
                            border-radius: 4px; 
                            cursor: pointer;
                        ">Filter</button>
                    </div>
                    <div>
                        <button type="button" onclick="clearDailyChallengeFilters()" style="
                            background: #6c757d; 
                            color: white; 
                            padding: 8px 16px; 
                            border: none; 
                            border-radius: 4px; 
                            cursor: pointer;
                        ">Clear</button>
                    </div>
                </div>
                
                <!-- Table Controls Row -->
                <div style="display: flex; align-items: center; gap: 15px; padding-top: 15px; border-top: 1px solid #e0e0e0;">
                    <div>
                        <label style="font-weight: bold; margin: 0; display: block;">üìè Table Density</label>
                        <p style="margin: 0; font-size: 12px; color: #6c757d;">Adjust table row spacing</p>
                    </div>
                    <select id="challengeTableDensitySelector" class="density-selector" onchange="changeChallengeTableDensity()" style="min-width: 150px; padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
                        <option value="comfortable">Comfortable</option>
                        <option value="compact">Compact</option>
                        <option value="spacious">Spacious</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Daily Challenges Table -->
        <div style="border: 1px solid #e0e0e0; border-radius: 8px; background: white; box-shadow: 0 2px 4px rgba(0,0,0,0.05);" id="challenge-table">
            <div style="background: #f8f9fa; padding: 15px; border-bottom: 1px solid #e0e0e0; border-radius: 8px 8px 0 0;">
                <h6 style="margin: 0; font-weight: bold; color: #007bff;">Daily Challenges</h6>
            </div>
            <div style="padding: 20px;">
                <div style="overflow-x: auto;" class="table-container challenge-table comfortable">
                    <table id="challenge-table-enhanced" style="width: 100%; border-collapse: collapse; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);">
                        <thead>
                            <tr>
                                <th style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%) !important; color: white !important; font-weight: 600; text-align: left; padding: 12px 16px !important; border-bottom: 2px solid #1e40af !important;">Title</th>
                                <th style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%) !important; color: white !important; font-weight: 600; text-align: left; padding: 12px 16px !important; border-bottom: 2px solid #1e40af !important;">Type</th>
                                <th style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%) !important; color: white !important; font-weight: 600; text-align: left; padding: 12px 16px !important; border-bottom: 2px solid #1e40af !important;">Date</th>
                                <th style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%) !important; color: white !important; font-weight: 600; text-align: left; padding: 12px 16px !important; border-bottom: 2px solid #1e40af !important;">Requirement</th>
                                <th style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%) !important; color: white !important; font-weight: 600; text-align: left; padding: 12px 16px !important; border-bottom: 2px solid #1e40af !important;">XP Reward</th>
                                <th style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%) !important; color: white !important; font-weight: 600; text-align: left; padding: 12px 16px !important; border-bottom: 2px solid #1e40af !important;">Completion</th>
                                <th style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%) !important; color: white !important; font-weight: 600; text-align: left; padding: 12px 16px !important; border-bottom: 2px solid #1e40af !important;">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="challenge-tbody">
                            <!-- Dynamic content loaded via AJAX -->
                        </tbody>
                    </table>
                </div>
                
                <!-- Pagination -->
                <div class="pagination-controls" style="margin-top: 20px; display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap; gap: 15px;">
                    <div class="pagination-info" style="color: #374151; font-size: 14px;">
                        <span id="challenge-pagination-info">Showing challenges</span>
                    </div>
                    <div class="pagination-center" style="display: flex; justify-content: center; flex: 1;">
                        <div class="pagination-buttons" id="challenge-pagination" style="display: inline-flex; gap: 5px; align-items: center;">
                            <!-- Dynamic pagination loaded via AJAX -->
                        </div>
                    </div>
                    <div class="pagination-per-page" style="display: flex; align-items: center; gap: 8px; color: #374151; font-size: 14px;">
                        <label>Show per page:</label>
                        <select id="challenge-per-page" style="padding: 6px 10px; border: 1px solid #d1d5db; border-radius: 4px; background: white; font-size: 14px;">
                            <option value="20" selected>20</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Daily Challenge Modal -->
<div id="challengeModalOverlay" class="question-modal-overlay" style="display: none;">
    <div class="question-modal">
        <div class="modal-header">
            <h2 class="modal-title">
                <span id="challengeModalIcon">üéØ</span>
                <span id="challengeModalTitleText">Create Daily Challenge</span>
            </h2>
            <button class="modal-close" onclick="closeDailyChallengeModal()">√ó</button>
        </div>

        <div class="modal-body">
            <div id="challengeModalMessage"></div>

            <form id="challengeModalForm" onsubmit="saveDailyChallenge(event)">
                <input type="hidden" id="challengeModalId" name="challenge_id">

                <!-- Challenge Title -->
                <div class="form-group">
                    <label for="challengeModalTitle">Challenge Title:</label>
                    <input type="text" id="challengeModalTitle" name="title" required 
                           placeholder="Enter challenge title...">
                </div>

                <!-- Description -->
                <div class="form-group">
                    <label for="challengeModalDescription">Description:</label>
                    <textarea id="challengeModalDescription" name="description" required 
                              placeholder="Describe the challenge..."></textarea>
                </div>

                <!-- Challenge Details Row -->
                <div class="form-row">
                    <div class="form-group">
                        <label for="challengeModalType">Challenge Type:</label>
                        <select id="challengeModalType" name="challenge_type" required>
                            <option value="">Select Type</option>
                            <option value="quiz">Quiz Challenge</option>
                            <option value="streak">Streak Challenge</option>
                            <option value="perfect_score">Perfect Score</option>
                            <option value="category_focus">Category Focus</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="challengeModalRequirement">Requirement Value:</label>
                        <input type="number" id="challengeModalRequirement" name="requirement_value" 
                               min="1" required placeholder="e.g., 3">
                    </div>
                </div>

                <!-- Date and Category -->
                <div class="form-row">
                    <div class="form-group">
                        <label for="challengeModalDate">Challenge Date:</label>
                        <input type="date" id="challengeModalDate" name="date" required>
                    </div>
                    <div class="form-group">
                        <label for="challengeModalCategory">Category (Optional):</label>
                        <input type="text" id="challengeModalCategory" name="category" 
                               placeholder="e.g., Trafikkskilt">
                    </div>
                </div>

                <!-- XP Rewards -->
                <div class="form-row">
                    <div class="form-group">
                        <label for="challengeModalXPReward">XP Reward:</label>
                        <input type="number" id="challengeModalXPReward" name="xp_reward" 
                               min="10" value="50" required placeholder="50">
                    </div>
                    <div class="form-group">
                        <label for="challengeModalBonusReward">Bonus XP (Optional):</label>
                        <input type="number" id="challengeModalBonusReward" name="bonus_reward" 
                               min="0" value="0" placeholder="0">
                    </div>
                </div>

                <!-- Active Status -->
                <div class="form-group">
                    <label>
                        <input type="checkbox" id="challengeModalActive" name="is_active" checked>
                        Challenge is active
                    </label>
                </div>

                <!-- Form Actions -->
                <div class="form-actions" style="display: flex; justify-content: flex-end; gap: 10px; margin-top: 20px;">
                    <button type="button" onclick="closeDailyChallengeModal()" style="
                        background: #6c757d; 
                        color: white; 
                        padding: 8px 16px; 
                        border: none; 
                        border-radius: 4px; 
                        cursor: pointer;
                    ">Cancel</button>
                    <button type="submit" style="
                        background: #007bff; 
                        color: white; 
                        padding: 8px 16px; 
                        border: none; 
                        border-radius: 4px; 
                        cursor: pointer;
                    ">
                        <span id="challengeModalSaveText">Create Challenge</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
// Daily Challenge Management JavaScript
let challengeCurrentPage = 1;
let challengePerPage = 20;
let challengeFilters = {};

// Load daily challenge data
function loadDailyChallengeData() {
    const loading = document.getElementById('challenge-loading');
    const tbody = document.getElementById('challenge-tbody');
    
    loading.style.display = 'block';
    tbody.innerHTML = '';
    
    // Build query parameters
    const params = new URLSearchParams({
        page: challengeCurrentPage,
        per_page: challengePerPage,
        ...challengeFilters
    });
    
    fetch(`/admin/api/daily-challenges?${params}`)
        .then(response => response.json())
        .then(data => {
            loading.style.display = 'none';
            
            if (data.success) {
                displayDailyChallengeData(data.challenges);
                updateDailyChallengePagination(data.pagination);
            } else {
                showDailyChallengeError(data.message);
            }
        })
        .catch(error => {
            loading.style.display = 'none';
            showDailyChallengeError('Failed to load challenge data');
            console.error('Error loading challenges:', error);
        });
}

// Display daily challenge data in table
function displayDailyChallengeData(challenges) {
    const tbody = document.getElementById('challenge-tbody');
    
    if (challenges.length === 0) {
        tbody.innerHTML = `
            <tr>
                <td colspan="7" style="text-align: center; padding: 40px; color: #6c757d;">
                    <i class="fas fa-target" style="font-size: 3em; margin-bottom: 15px; opacity: 0.3;"></i>
                    <br>No challenges found
                </td>
            </tr>
        `;
        return;
    }
    
    tbody.innerHTML = challenges.map(challenge => {
        const isActive = challenge.is_active;
        const activeStatus = isActive ? 
            '<span style="background: #10b981; color: white; padding: 2px 8px; border-radius: 12px; font-size: 11px; font-weight: 600;">Active</span>' :
            '<span style="background: #ef4444; color: white; padding: 2px 8px; border-radius: 12px; font-size: 11px; font-weight: 600;">Inactive</span>';
        
        const challengeDate = new Date(challenge.date).toLocaleDateString('no-NO');
        const completionRate = challenge.completion_rate || 0;
        
        return `
            <tr style="border-bottom: 1px solid #e5e7eb; transition: background-color 0.2s;">
                <td style="padding: 12px 16px;">
                    <div>
                        <strong>${challenge.title}</strong>
                        <div style="font-size: 12px; color: #6b7280; margin-top: 2px;">
                            ${challenge.description.substring(0, 40)}${challenge.description.length > 40 ? '...' : ''}
                        </div>
                    </div>
                </td>
                <td style="padding: 12px 16px; text-transform: capitalize;">${challenge.challenge_type.replace('_', ' ')}</td>
                <td style="padding: 12px 16px;">
                    <div>${challengeDate}</div>
                    <div style="font-size: 11px;">${activeStatus}</div>
                </td>
                <td style="padding: 12px 16px; text-align: center;">${challenge.requirement_value}</td>
                <td style="padding: 12px 16px;">
                    <div style="color: #f59e0b; font-weight: 600;">${challenge.xp_reward} XP</div>
                    ${challenge.bonus_reward > 0 ? `<div style="font-size: 11px; color: #6b7280;">+${challenge.bonus_reward} bonus</div>` : ''}
                </td>
                <td style="padding: 12px 16px; text-align: center;">
                    <div style="font-size: 12px;">
                        <div>${challenge.completed_users}/${challenge.total_users}</div>
                        <div style="color: #6b7280;">${completionRate}%</div>
                    </div>
                </td>
                <td style="padding: 12px 16px;">
                    <div style="display: flex; gap: 8px;">
                        <button onclick="editDailyChallenge(${challenge.id})" 
                                style="background: #3b82f6; color: white; border: none; padding: 4px 8px; border-radius: 4px; cursor: pointer; font-size: 12px;">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button onclick="deleteDailyChallenge(${challenge.id}, '${challenge.title}')" 
                                style="background: #ef4444; color: white; border: none; padding: 4px 8px; border-radius: 4px; cursor: pointer; font-size: 12px;">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </td>
            </tr>
        `;
    }).join('');
}

// Daily challenge modal functions
function openDailyChallengeModal(challengeId = null) {
    const modal = document.getElementById('challengeModalOverlay');
    const form = document.getElementById('challengeModalForm');
    const titleText = document.getElementById('challengeModalTitleText');
    const saveText = document.getElementById('challengeModalSaveText');
    
    if (challengeId) {
        titleText.textContent = 'Edit Daily Challenge';
        saveText.textContent = 'Update Challenge';
        loadDailyChallengeForEdit(challengeId);
    } else {
        titleText.textContent = 'Create Daily Challenge';
        saveText.textContent = 'Create Challenge';
        form.reset();
        document.getElementById('challengeModalId').value = '';
        // Set today's date as default
        document.getElementById('challengeModalDate').value = new Date().toISOString().split('T')[0];
    }
    
    modal.style.display = 'block';
}

function closeDailyChallengeModal() {
    document.getElementById('challengeModalOverlay').style.display = 'none';
}

// Save daily challenge (create or update)
function saveDailyChallenge(event) {
    event.preventDefault();
    
    const form = event.target;
    const formData = new FormData(form);
    const challengeId = formData.get('challenge_id');
    
    const data = {
        title: formData.get('title'),
        description: formData.get('description'),
        challenge_type: formData.get('challenge_type'),
        requirement_value: parseInt(formData.get('requirement_value')),
        xp_reward: parseInt(formData.get('xp_reward')) || 50,
        bonus_reward: parseInt(formData.get('bonus_reward')) || 0,
        category: formData.get('category'),
        date: formData.get('date'),
        is_active: formData.has('is_active')
    };
    
    const url = challengeId ? `/admin/api/daily-challenges/${challengeId}` : '/admin/api/daily-challenges';
    const method = challengeId ? 'PUT' : 'POST';
    
    fetch(url, {
        method: method,
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            closeDailyChallengeModal();
            loadDailyChallengeData();
            loadDailyChallengeStats();
            showMessage(result.message, 'success');
        } else {
            showDailyChallengeError(result.message);
        }
    })
    .catch(error => {
        showDailyChallengeError('Failed to save challenge');
        console.error('Error saving challenge:', error);
    });
}

// Load daily challenge for editing
function loadDailyChallengeForEdit(challengeId) {
    // This would typically fetch the challenge data
    // For now, we'll implement a basic version
    console.log('Loading challenge for edit:', challengeId);
}

// Delete daily challenge
function deleteDailyChallenge(challengeId, challengeTitle) {
    if (!confirm(`Are you sure you want to delete the challenge "${challengeTitle}"?`)) {
        return;
    }
    
    fetch(`/admin/api/daily-challenges/${challengeId}`, {
        method: 'DELETE'
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            loadDailyChallengeData();
            loadDailyChallengeStats();
            showMessage(result.message, 'success');
        } else {
            showDailyChallengeError(result.message);
        }
    })
    .catch(error => {
        showDailyChallengeError('Failed to delete challenge');
        console.error('Error deleting challenge:', error);
    });
}

// Filter functions
function applyDailyChallengeFilters() {
    challengeFilters = {
        search: document.getElementById('challenge-search').value,
        challenge_type: document.getElementById('challenge-type-filter').value,
        date_filter: document.getElementById('challenge-date-filter').value
    };
    challengeCurrentPage = 1;
    loadDailyChallengeData();
}

function clearDailyChallengeFilters() {
    document.getElementById('challenge-search').value = '';
    document.getElementById('challenge-type-filter').value = '';
    document.getElementById('challenge-date-filter').value = '';
    challengeFilters = {};
    challengeCurrentPage = 1;
    loadDailyChallengeData();
}

// Load daily challenge statistics
function loadDailyChallengeStats() {
    fetch('/admin/api/daily-challenges/stats')
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const stats = data.stats;
                document.querySelector('[data-stat="total_challenges"]').textContent = stats.total_challenges;
                document.querySelector('[data-stat="active_challenges"]').textContent = stats.active_challenges;
                document.querySelector('[data-stat="challenges_this_week"]').textContent = stats.challenges_this_week;
                document.querySelector('[data-stat="avg_completion_rate"]').textContent = `${stats.avg_completion_rate}%`;
            }
        })
        .catch(error => console.error('Error loading challenge stats:', error));
}

// Utility functions
function showDailyChallengeError(message) {
    showMessage(message, 'error');
}

function updateDailyChallengePagination(pagination) {
    // Implement pagination update logic
    const info = document.getElementById('challenge-pagination-info');
    info.textContent = `Showing ${((pagination.page - 1) * pagination.per_page) + 1} to ${Math.min(pagination.page * pagination.per_page, pagination.total)} of ${pagination.total} challenges`;
}

function changeChallengeTableDensity() {
    const density = document.getElementById('challengeTableDensitySelector').value;
    const table = document.querySelector('.challenge-table');
    table.className = `table-container challenge-table ${density}`;
}

// Initialize challenge section when DOM is ready
document.addEventListener('DOMContentLoaded', function() {
    // Challenge section will be initialized when the section becomes active
});
</script>
