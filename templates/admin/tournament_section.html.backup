<!-- Tournament Management Section - Integrated into Admin Dashboard -->
<div id="tournamentSection" class="section">
    <!-- Statistics Cards -->
    <div class="stats-container">
        <div class="stat-card">
            <h3 data-stat="total_tournaments">0</h3>
            <p>Total Tournaments</p>
        </div>
        <div class="stat-card">
            <h3 data-stat="active_tournaments">0</h3>
            <p>Active Tournaments</p>
        </div>
        <div class="stat-card">
            <h3 data-stat="upcoming_tournaments">0</h3>
            <p>Upcoming</p>
        </div>
        <div class="stat-card">
            <h3 data-stat="total_participants">0</h3>
            <p>Total Participants</p>
        </div>
    </div>

    <!-- Main Content Container -->
    <div style="max-width: 1200px; margin: 0 auto; padding: 20px; background: white; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
        <!-- Header -->
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px;">
            <h2 style="margin: 0; color: #333; font-size: 1.8rem;">üèÜ Tournament Management</h2>
            <div>
                <button onclick="openTournamentModal()" class="btn" style="
                    background: #007bff; 
                    color: white; 
                    padding: 8px 16px; 
                    border: none; 
                    border-radius: 4px; 
                    text-decoration: none;
                    cursor: pointer;
                ">
                    <i class="fas fa-plus"></i> Create Tournament
                </button>
            </div>
        </div>

        <!-- Loading Indicator -->
        <div id="tournament-loading" style="display: none; text-align: center; padding: 20px;">
            <i class="fas fa-spinner fa-spin fa-2x text-muted"></i>
            <p class="text-muted mt-2">Loading tournament data...</p>
        </div>

        <!-- Filters and Controls -->
        <div style="border: 1px solid #e0e0e0; border-radius: 8px; margin-bottom: 20px; background: white; box-shadow: 0 2px 4px rgba(0,0,0,0.05);">
            <div style="background: #f8f9fa; padding: 15px; border-bottom: 1px solid #e0e0e0; border-radius: 8px 8px 0 0;">
                <h6 style="margin: 0; font-weight: bold; color: #007bff;">Filters & Controls</h6>
            </div>
            <div style="padding: 20px;">
                <!-- Filters Row -->
                <div style="display: grid; grid-template-columns: 1fr 1fr 1fr auto; gap: 15px; align-items: end; margin-bottom: 20px;">
                    <div>
                        <label style="font-weight: bold; margin-bottom: 5px; display: block;">Status</label>
                        <select id="tournament-status-filter" style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
                            <option value="">All Statuses</option>
                            <option value="active">Active</option>
                            <option value="upcoming">Upcoming</option>
                            <option value="completed">Completed</option>
                            <option value="inactive">Inactive</option>
                        </select>
                    </div>
                    <div>
                        <label for="tournament-search" style="font-weight: bold; margin-bottom: 5px; display: block;">Search</label>
                        <input type="text" id="tournament-search" placeholder="Search tournaments..." 
                               style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
                    </div>
                    <div>
                        <button type="button" onclick="applyTournamentFilters()" style="
                            background: #007bff; 
                            color: white; 
                            padding: 8px 16px; 
                            border: none; 
                            border-radius: 4px; 
                            cursor: pointer;
                        ">Filter</button>
                    </div>
                    <div>
                        <button type="button" onclick="clearTournamentFilters()" style="
                            background: #6c757d; 
                            color: white; 
                            padding: 8px 16px; 
                            border: none; 
                            border-radius: 4px; 
                            cursor: pointer;
                        ">Clear</button>
                    </div>
                </div>
                
                <!-- Table Controls Row -->
                <div style="display: flex; align-items: center; gap: 15px; padding-top: 15px; border-top: 1px solid #e0e0e0;">
                    <div>
                        <label style="font-weight: bold; margin: 0; display: block;">üìè Table Density</label>
                        <p style="margin: 0; font-size: 12px; color: #6c757d;">Adjust table row spacing</p>
                    </div>
                    <select id="tournamentTableDensitySelector" class="density-selector" onchange="changeTournamentTableDensity()" style="min-width: 150px; padding: 8px; border: 1px solid #ccc; border-radius: 4px;">
                        <option value="comfortable">Comfortable</option>
                        <option value="compact">Compact</option>
                        <option value="spacious">Spacious</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Tournaments Table -->
        <div style="border: 1px solid #e0e0e0; border-radius: 8px; background: white; box-shadow: 0 2px 4px rgba(0,0,0,0.05);" id="tournament-table">
            <div style="background: #f8f9fa; padding: 15px; border-bottom: 1px solid #e0e0e0; border-radius: 8px 8px 0 0;">
                <h6 style="margin: 0; font-weight: bold; color: #007bff;">Tournaments</h6>
            </div>
            <div style="padding: 20px;">
                <div style="overflow-x: auto;" class="table-container tournament-table comfortable">
                    <table id="tournament-table-enhanced" style="width: 100%; border-collapse: collapse; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);">
                        <thead>
                            <tr>
                                <th style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%) !important; color: white !important; font-weight: 600; text-align: left; padding: 12px 16px !important; border-bottom: 2px solid #1e40af !important;">Name</th>
                                <th style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%) !important; color: white !important; font-weight: 600; text-align: left; padding: 12px 16px !important; border-bottom: 2px solid #1e40af !important;">Type</th>
                                <th style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%) !important; color: white !important; font-weight: 600; text-align: left; padding: 12px 16px !important; border-bottom: 2px solid #1e40af !important;">Status</th>
                                <th style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%) !important; color: white !important; font-weight: 600; text-align: left; padding: 12px 16px !important; border-bottom: 2px solid #1e40af !important;">Participants</th>
                                <th style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%) !important; color: white !important; font-weight: 600; text-align: left; padding: 12px 16px !important; border-bottom: 2px solid #1e40af !important;">Prize Pool</th>
                                <th style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%) !important; color: white !important; font-weight: 600; text-align: left; padding: 12px 16px !important; border-bottom: 2px solid #1e40af !important;">Dates</th>
                                <th style="background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%) !important; color: white !important; font-weight: 600; text-align: left; padding: 12px 16px !important; border-bottom: 2px solid #1e40af !important;">Actions</th>
                            </tr>
                        </thead>
                        <tbody id="tournament-tbody">
                            <!-- Dynamic content loaded via AJAX -->
                        </tbody>
                    </table>
                </div>
                
                <!-- Pagination -->
                <div class="pagination-controls" style="margin-top: 20px; display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap; gap: 15px;">
                    <div class="pagination-info" style="color: #374151; font-size: 14px;">
                        <span id="tournament-pagination-info">Showing tournaments</span>
                    </div>
                    <div class="pagination-center" style="display: flex; justify-content: center; flex: 1;">
                        <div class="pagination-buttons" id="tournament-pagination" style="display: inline-flex; gap: 5px; align-items: center;">
                            <!-- Dynamic pagination loaded via AJAX -->
                        </div>
                    </div>
                    <div class="pagination-per-page" style="display: flex; align-items: center; gap: 8px; color: #374151; font-size: 14px;">
                        <label>Show per page:</label>
                        <select id="tournament-per-page" style="padding: 6px 10px; border: 1px solid #d1d5db; border-radius: 4px; background: white; font-size: 14px;">
                            <option value="20" selected>20</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Tournament Modal -->
<div id="tournamentModalOverlay" class="question-modal-overlay" style="display: none;">
    <div class="question-modal">
        <div class="modal-header">
            <h2 class="modal-title">
                <span id="tournamentModalIcon">üèÜ</span>
                <span id="tournamentModalTitleText">Create Tournament</span>
            </h2>
            <button class="modal-close" onclick="closeTournamentModal()">√ó</button>
        </div>

        <div class="modal-body">
            <div id="tournamentModalMessage"></div>

            <form id="tournamentModalForm" onsubmit="saveTournament(event)">
                <input type="hidden" id="tournamentModalId" name="tournament_id">

                <!-- Tournament Name -->
                <div class="form-group">
                    <label for="tournamentModalName">Tournament Name:</label>
                    <input type="text" id="tournamentModalName" name="name" required 
                           placeholder="Enter tournament name...">
                </div>

                <!-- Description -->
                <div class="form-group">
                    <label for="tournamentModalDescription">Description:</label>
                    <textarea id="tournamentModalDescription" name="description" required 
                              placeholder="Describe the tournament..."></textarea>
                </div>

                <!-- Tournament Details Row -->
                <div class="form-row">
                    <div class="form-group">
                        <label for="tournamentModalType">Tournament Type:</label>
                        <select id="tournamentModalType" name="tournament_type" required>
                            <option value="">Select Type</option>
                            <option value="speed">Speed Challenge</option>
                            <option value="accuracy">Accuracy Challenge</option>
                            <option value="marathon">Marathon</option>
                            <option value="category">Category Focus</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="tournamentModalCategory">Category (Optional):</label>
                        <input type="text" id="tournamentModalCategory" name="category" 
                               placeholder="e.g., Trafikkskilt">
                    </div>
                </div>

                <!-- Date Range -->
                <div class="form-row">
                    <div class="form-group">
                        <label for="tournamentModalStartDate">Start Date:</label>
                        <input type="datetime-local" id="tournamentModalStartDate" name="start_date" required>
                    </div>
                    <div class="form-group">
                        <label for="tournamentModalEndDate">End Date:</label>
                        <input type="datetime-local" id="tournamentModalEndDate" name="end_date" required>
                    </div>
                </div>

                <!-- XP Settings -->
                <div class="form-row">
                    <div class="form-group">
                        <label for="tournamentModalEntryFee">Entry Fee (XP):</label>
                        <input type="number" id="tournamentModalEntryFee" name="entry_fee_xp" 
                               min="0" value="0" placeholder="0">
                    </div>
                    <div class="form-group">
                        <label for="tournamentModalPrizePool">Prize Pool (XP):</label>
                        <input type="number" id="tournamentModalPrizePool" name="prize_pool_xp" 
                               min="100" value="1000" required placeholder="1000">
                    </div>
                </div>

                <!-- Active Status -->
                <div class="form-group">
                    <label>
                        <input type="checkbox" id="tournamentModalActive" name="is_active" checked>
                        Tournament is active
                    </label>
                </div>

                <!-- Form Actions -->
                <div class="form-actions" style="display: flex; justify-content: flex-end; gap: 10px; margin-top: 20px;">
                    <button type="button" onclick="closeTournamentModal()" style="
                        background: #6c757d; 
                        color: white; 
                        padding: 8px 16px; 
                        border: none; 
                        border-radius: 4px; 
                        cursor: pointer;
                    ">Cancel</button>
                    <button type="submit" style="
                        background: #007bff; 
                        color: white; 
                        padding: 8px 16px; 
                        border: none; 
                        border-radius: 4px; 
                        cursor: pointer;
                    ">
                        <span id="tournamentModalSaveText">Create Tournament</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
// Tournament Management JavaScript
let tournamentCurrentPage = 1;
let tournamentPerPage = 20;
let tournamentFilters = {};

// Load tournament data
function loadTournamentData() {
    const loading = document.getElementById('tournament-loading');
    const tbody = document.getElementById('tournament-tbody');
    
    loading.style.display = 'block';
    tbody.innerHTML = '';
    
    // Build query parameters
    const params = new URLSearchParams({
        page: tournamentCurrentPage,
        per_page: tournamentPerPage,
        ...tournamentFilters
    });
    
    fetch(`/admin/api/tournaments?${params}`)
        .then(response => response.json())
        .then(data => {
            loading.style.display = 'none';
            
            if (data.success) {
                displayTournamentData(data.tournaments);
                updateTournamentPagination(data.pagination);
            } else {
                showTournamentError(data.message);
            }
        })
        .catch(error => {
            loading.style.display = 'none';
            showTournamentError('Failed to load tournament data');
            console.error('Error loading tournaments:', error);
        });
}

// Display tournament data in table
function displayTournamentData(tournaments) {
    const tbody = document.getElementById('tournament-tbody');
    
    if (tournaments.length === 0) {
        tbody.innerHTML = `
            <tr>
                <td colspan="7" style="text-align: center; padding: 40px; color: #6c757d;">
                    <i class="fas fa-trophy" style="font-size: 3em; margin-bottom: 15px; opacity: 0.3;"></i>
                    <br>No tournaments found
                </td>
            </tr>
        `;
        return;
    }
    
    tbody.innerHTML = tournaments.map(tournament => {
        const statusBadge = getStatusBadge(tournament.status);
        const startDate = new Date(tournament.start_date).toLocaleDateString('no-NO');
        const endDate = new Date(tournament.end_date).toLocaleDateString('no-NO');
        
        return `
            <tr style="border-bottom: 1px solid #e5e7eb; transition: background-color 0.2s;">
                <td style="padding: 12px 16px;">
                    <div>
                        <strong>${tournament.name}</strong>
                        <div style="font-size: 12px; color: #6b7280; margin-top: 2px;">
                            ${tournament.description.substring(0, 50)}${tournament.description.length > 50 ? '...' : ''}
                        </div>
                    </div>
                </td>
                <td style="padding: 12px 16px; text-transform: capitalize;">${tournament.tournament_type}</td>
                <td style="padding: 12px 16px;">${statusBadge}</td>
                <td style="padding: 12px 16px; text-align: center;">${tournament.participant_count}</td>
                <td style="padding: 12px 16px; color: #f59e0b; font-weight: 600;">${tournament.prize_pool_xp} XP</td>
                <td style="padding: 12px 16px; font-size: 12px;">
                    <div>Start: ${startDate}</div>
                    <div style="color: #6b7280;">End: ${endDate}</div>
                </td>
                <td style="padding: 12px 16px;">
                    <div style="display: flex; gap: 8px;">
                        <button onclick="editTournament(${tournament.id})" 
                                style="background: #3b82f6; color: white; border: none; padding: 4px 8px; border-radius: 4px; cursor: pointer; font-size: 12px;">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button onclick="deleteTournament(${tournament.id}, '${tournament.name}')" 
                                style="background: #ef4444; color: white; border: none; padding: 4px 8px; border-radius: 4px; cursor: pointer; font-size: 12px;">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </td>
            </tr>
        `;
    }).join('');
}

// Get status badge HTML
function getStatusBadge(status) {
    const badges = {
        active: '<span style="background: #10b981; color: white; padding: 2px 8px; border-radius: 12px; font-size: 11px; font-weight: 600;">Active</span>',
        upcoming: '<span style="background: #3b82f6; color: white; padding: 2px 8px; border-radius: 12px; font-size: 11px; font-weight: 600;">Upcoming</span>',
        completed: '<span style="background: #6b7280; color: white; padding: 2px 8px; border-radius: 12px; font-size: 11px; font-weight: 600;">Completed</span>',
        inactive: '<span style="background: #ef4444; color: white; padding: 2px 8px; border-radius: 12px; font-size: 11px; font-weight: 600;">Inactive</span>'
    };
    return badges[status] || badges.inactive;
}

// Tournament modal functions
function openTournamentModal(tournamentId = null) {
    const modal = document.getElementById('tournamentModalOverlay');
    const form = document.getElementById('tournamentModalForm');
    const titleText = document.getElementById('tournamentModalTitleText');
    const saveText = document.getElementById('tournamentModalSaveText');
    
    if (tournamentId) {
        titleText.textContent = 'Edit Tournament';
        saveText.textContent = 'Update Tournament';
        loadTournamentForEdit(tournamentId);
    } else {
        titleText.textContent = 'Create Tournament';
        saveText.textContent = 'Create Tournament';
        form.reset();
        document.getElementById('tournamentModalId').value = '';
    }
    
    modal.style.display = 'block';
}

function closeTournamentModal() {
    document.getElementById('tournamentModalOverlay').style.display = 'none';
}

// Save tournament (create or update)
function saveTournament(event) {
    event.preventDefault();
    
    const form = event.target;
    const formData = new FormData(form);
    const tournamentId = formData.get('tournament_id');
    
    const data = {
        name: formData.get('name'),
        description: formData.get('description'),
        tournament_type: formData.get('tournament_type'),
        category: formData.get('category'),
        start_date: formData.get('start_date'),
        end_date: formData.get('end_date'),
        entry_fee_xp: parseInt(formData.get('entry_fee_xp')) || 0,
        prize_pool_xp: parseInt(formData.get('prize_pool_xp')) || 1000,
        is_active: formData.has('is_active')
    };
    
    const url = tournamentId ? `/admin/api/tournaments/${tournamentId}` : '/admin/api/tournaments';
    const method = tournamentId ? 'PUT' : 'POST';
    
    fetch(url, {
        method: method,
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            closeTournamentModal();
            loadTournamentData();
            loadTournamentStats();
            showMessage(result.message, 'success');
        } else {
            showTournamentError(result.message);
        }
    })
    .catch(error => {
        showTournamentError('Failed to save tournament');
        console.error('Error saving tournament:', error);
    });
}

// Load tournament for editing
function loadTournamentForEdit(tournamentId) {
    // This would typically fetch the tournament data
    // For now, we'll implement a basic version
    console.log('Loading tournament for edit:', tournamentId);
}

// Delete tournament
function deleteTournament(tournamentId, tournamentName) {
    if (!confirm(`Are you sure you want to delete the tournament "${tournamentName}"?`)) {
        return;
    }
    
    fetch(`/admin/api/tournaments/${tournamentId}`, {
        method: 'DELETE'
    })
    .then(response => response.json())
    .then(result => {
        if (result.success) {
            loadTournamentData();
            loadTournamentStats();
            showMessage(result.message, 'success');
        } else {
            showTournamentError(result.message);
        }
    })
    .catch(error => {
        showTournamentError('Failed to delete tournament');
        console.error('Error deleting tournament:', error);
    });
}

// Filter functions
function applyTournamentFilters() {
    tournamentFilters = {
        search: document.getElementById('tournament-search').value,
        status: document.getElementById('tournament-status-filter').value
    };
    tournamentCurrentPage = 1;
    loadTournamentData();
}

function clearTournamentFilters() {
    document.getElementById('tournament-search').value = '';
    document.getElementById('tournament-status-filter').value = '';
    tournamentFilters = {};
    tournamentCurrentPage = 1;
    loadTournamentData();
}

// Load tournament statistics
function loadTournamentStats() {
    fetch('/admin/api/tournaments/stats')
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const stats = data.stats;
                document.querySelector('[data-stat="total_tournaments"]').textContent = stats.total_tournaments;
                document.querySelector('[data-stat="active_tournaments"]').textContent = stats.active_tournaments;
                document.querySelector('[data-stat="upcoming_tournaments"]').textContent = stats.upcoming_tournaments;
                document.querySelector('[data-stat="total_participants"]').textContent = stats.total_participants;
            }
        })
        .catch(error => console.error('Error loading tournament stats:', error));
}

// Utility functions
function showTournamentError(message) {
    showMessage(message, 'error');
}

function updateTournamentPagination(pagination) {
    // Implement pagination update logic
    const info = document.getElementById('tournament-pagination-info');
    info.textContent = `Showing ${((pagination.page - 1) * pagination.per_page) + 1} to ${Math.min(pagination.page * pagination.per_page, pagination.total)} of ${pagination.total} tournaments`;
}

function changeTournamentTableDensity() {
    const density = document.getElementById('tournamentTableDensitySelector').value;
    const table = document.querySelector('.tournament-table');
    table.className = `table-container tournament-table ${density}`;
}

// Initialize tournament section when DOM is ready
document.addEventListener('DOMContentLoaded', function() {
    // Tournament section will be initialized when the section becomes active
});
</script>
